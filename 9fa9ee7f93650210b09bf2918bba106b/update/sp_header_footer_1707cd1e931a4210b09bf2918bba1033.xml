<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_header_footer">
    <sp_header_footer action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function(i18n) {
  var c = this;

  c.translations = {
    text1: i18n.getMessage('Technology'),
    text2: i18n.getMessage('Courses'),
    text3: i18n.getMessage('My Learning'),
    text4: i18n.getMessage('Forum'),
    text5: i18n.getMessage('My Profile')
  };

  c.$onInit = function() {
    var notificationsButton = document.getElementById('notifications-button');
    var notificationsModal = document.getElementById('notifications-modal');
    var closeButton = document.querySelector('.close');
    var notificationsList = document.getElementById('notifications-list');
    var notificationsCount = document.getElementById('notifications-count');

    notificationsButton.addEventListener('click', function() {
      notificationsModal.style.display = 'block';
    });

    closeButton.addEventListener('click', function() {
      notificationsModal.style.display = 'none';
    });

    window.addEventListener('click', function(event) {
      if (event.target === notificationsModal) {
        notificationsModal.style.display = 'none';
      }
    });

    // Populate notifications list from server data and update notification count
    if (c.data.notifications && c.data.notifications.length) {
      notificationsCount.textContent = c.data.notifications.length; // Update the count on the button

      c.data.notifications.forEach(function(notification) {
        var listItem = document.createElement('li');
        listItem.classList.add('notification-item');

        var description = document.createElement('div');
        description.classList.add('description');
        description.textContent = notification.description;

        var date = document.createElement('div');
        date.classList.add('date');
        date.textContent = new Date(notification.date).toLocaleString();

        listItem.appendChild(description);
        listItem.appendChild(date);
        notificationsList.appendChild(listItem);
      });
    } else {
      notificationsCount.textContent = '0'; // Set to 0 if no notifications
    }
  };
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>body {
  font-family: 'Poppins', sans-serif;
}

/* Header Styling */
.header {
  background-color: #343a40;
  padding: 15px 50px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid #555;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  transition: background-color 0.3s, border-bottom 0.3s;
}

.logo img {
  height: 60px;
  transition: height 0.3s;
}

/* Navigation Styling */
.navigation {
  display: flex;
  justify-content: center;
  flex-grow: 1;
  animation: fadeIn 0.5s ease-in-out;
}

.navigation a {
  margin: 0 30px;
  text-decoration: none;
  color: #ffffff;
  font-size: 1.5rem;
  font-weight: 600;
  transition: color 0.3s, transform 0.3s;
  outline: none;
}

.navigation a:hover {
  color: #f39c12;
  transform: translateY(-3px);
}

.navigation a:focus {
  box-shadow: none;
}

/* Search and Account Styling */
.search-account {
  display: flex;
  align-items: center;
}

.search-bar {
  margin-right: 30px;
  position: relative;
  transition: margin-right 0.3s;
}

.search-bar input {
  padding: 10px 15px;
  border: 1px solid #555;
  border-radius: 4px;
  font-size: 1.25rem;
  width: 300px;
  transition: width 0.3s, border-color 0.3s;
}

.search-bar input:focus {
  border-color: #f39c12;
}

.search-bar button {
  position: absolute;
  right: 0;
  top: 0;
  border: none;
  background: none;
  padding: 10px 15px;
  cursor: pointer;
  color: #555;
  transition: color 0.3s;
}

.search-bar button:hover {
  color: #f39c12;
}

.account {
  box-shadow: none;
  font-size: 1.5rem;
  font-weight: 600;
  color: #ffffff;
  text-decoration: none;
  transition: color 0.3s, transform 0.3s;
}

.account:hover {
  color: #f39c12;
  transform: translateY(-3px);
}

.menu-toggle {
  display: none;
  background: none;
  border: none;
  color: #ffffff;
  font-size: 1.5rem;
  cursor: pointer;
  margin-left: auto;
}

.menu-toggle:focus {
  outline: none;
}


/* Modern Notification Modal Styling */
#notifications-modal {
  display: none; /* Hidden by default */
  position: fixed;
  margin-left: auto;
  z-index: 1000;
  right: 20px; /* Position the modal on the right */
  top: 60px; /* Adjust top positioning */
  width: 300px; /* Adjust width as needed */
  max-height: 80vh; /* Limit height for better view on larger screens */
  overflow-y: auto; /* Enable scroll if content exceeds height */
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
  transition: opacity 0.3s ease, transform 0.3s ease;
  opacity: 0;
  transform: translateY(-20px); /* Hidden by default */
}

#notifications-modal.show {
  display: block; /* Show modal when active */
  opacity: 1;
  transform: translateY(0); /* Slide in effect */
}

.modal-header {
  padding: 15px;
  border-bottom: 1px solid #eee;
  background-color: #f7f7f7;
  display: ruby-text;
  justify-content: space-between;
  align-items: center;
}

.modal-header h2 {
  margin: 0;
  font-size: 1.25rem;
  font-weight: 600;
  color: #333;
}

.modal-header .close {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: #333;
  transition: color 0.3s;
}

.modal-header .close:hover {
  color: #e74c3c;
}

.modal-body {
  padding: 15px;
}

#notifications-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.notification-item {
  border-bottom: 1px solid #eee;
  padding: 10px 0;
  display: flex;
  align-items: center;
}

.notification-item:last-child {
  border-bottom: none;
}

.notification-item .icon {
  margin-right: 10px;
  color: #3498db;
  font-size: 1.5rem;
}

.notification-item .description {
  font-size: 2.0rem;
  color: #555;
}

.notification-item .date {
  font-size: 1.5rem;
  color: #999;
  margin-left: auto;
  text-align: right;
}

.notification-item:hover {
  background-color: #f0f0f0;
}

/* Media Queries for Responsiveness */
@media (max-width: 768px) {
  #notifications-modal {
    width: 80%;
    right: 10px;
  }
}

@media (max-width: 480px) {
  #notifications-modal {
    width: 95%;
    right: 5px;
  }
}

/* Basic styling for the notifications button */
.notifications-button {
  position: relative;
  margin-left: 10px;
  background: #3498db; /* Primary color */
  border: none;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  font-size: 1.2rem;
  cursor: pointer;
  transition: background-color 0.3s, box-shadow 0.3s;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.notifications-button:hover {
  background-color: #2980b9; /* Darker shade on hover */
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
}



/* Optional media query for smaller screens */
@media (max-width: 768px) {
  .notifications-button {
    width: 35px;
    height: 35px;
    font-size: 1rem;
  }

}




/* Media Queries for Responsiveness */
@media (max-width: 1024px) {
  .navigation a {
    margin: 0 20px;
    font-size: 1.25rem;
  }

  .search-bar input {
    width: 250px;
  }
}

@media (max-width: 768px) {
  .header {
    flex-direction: column;
    align-items: flex-start;
    padding: 15px 20px;
    transition: padding 0.3s;
  }

  .logo img {
    height: 40px;
  }

  .menu-toggle {
    display: block;
  }

  .navigation {
    flex-direction: column;
    align-items: flex-start;
    width: 100%;
    display: none;
  }

  .navigation.active {
    display: flex;
  }

  .navigation a {
    box-shadow: none;
    margin: 5px 0;
    font-size: 1.25rem;
  }

  .search-account {
    width: 100%;
    justify-content: space-between;
    margin-top: 10px;
  }

  .search-bar {
    width: calc(100% - 150px);
    margin-right: 0;
  }

  .search-bar input {
    width: 100%;
  }

  .account {
    margin-left: 10px;
  }
}

@media (max-width: 480px) {
  .header {
    padding: 15px 10px;
  }

  .logo img {
    height: 30px;
  }

  .navigation a {
    font-size: 1rem;
  }

  .search-bar {
    width: calc(100% - 100px);
  }

  .account {
    font-size: 1.25rem;
  }
}

/* Keyframes for Animation */
@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Style for the notification count badge */
.notifications-count {
  position: absolute;
    top: -0.5rem;
    right: -1rem;
    background-color: red;
    color: white;
    border-radius: 100%;
    padding: .9rem .6rem;
    font-size: 1.2rem;
    font-weight: bold;
    line-height: 1;
    text-align: center;
    min-width: 1rem;
    height: 1rem;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Keyframes for shake animation */
@keyframes shake {
  0% { transform: rotate(0deg); }
  25% { transform: rotate(15deg); }
  50% { transform: rotate(-15deg); }
  75% { transform: rotate(15deg); }
  100% { transform: rotate(0deg); }
}

/* Apply shake animation to the bell icon */
.notifications-button .fa-bell {
  animation: shake 0.5s;
  animation-iteration-count: infinite;
  transform-origin: 50% 0;
}

/* Class to stop the shake animation */
.stop-shake .fa-bell {
  animation: none;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>LMS Header</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
	// Get the email of the current user
	var userEmail = '';
	var grUser = new GlideRecord('sys_user');
	grUser.addQuery('user_name', gs.getUserName());
	grUser.query();
	if (grUser.next()) {
		userEmail = grUser.getValue('email');
	}

	// Fetch notifications for the user's email
	var grEmail = new GlideRecord('sys_email');
	grEmail.addQuery('recipients', userEmail);
	grEmail.orderByDesc('sys_created_on');
	grEmail.query();

	var notifications = [];
	while (grEmail.next()) {
		notifications.push({
			description: grEmail.getValue('subject'),
			date: grEmail.getValue('sys_created_on')
		});
	}

	data.notifications = notifications;
})();
]]></script>
        <servicenow>false</servicenow>
        <static>false</static>
        <sys_class_name>sp_header_footer</sys_class_name>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-23 05:47:49</sys_created_on>
        <sys_id>1707cd1e931a4210b09bf2918bba1033</sys_id>
        <sys_mod_count>189</sys_mod_count>
        <sys_name>LMS Header</sys_name>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_policy/>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_update_name>sp_header_footer_1707cd1e931a4210b09bf2918bba1033</sys_update_name>
        <sys_updated_by>abhishek.s</sys_updated_by>
        <sys_updated_on>2024-12-04 21:19:20</sys_updated_on>
        <template><![CDATA[<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<header class="header" id="header">
  <div class="logo">
    <a href="lms?id=lms_index"><img src="x_1383177_lms_app.LMS Logo.jpg" alt="LMS Logo"></a>
  </div>
  <button class="menu-toggle" id="menu-toggle"><i class="fa fa-bars"></i></button>
  <nav class="navigation" id="navigation">
    <a href="lms?id=lms_course_domain">${Technology}</a>
    <a href="lms?id=lms_courses">${Courses}</a>
    <a href="lms?id=lms_my_learning">${My Learning}</a>
    <a href="lms?id=lms_discussion_forum">${Forum}</a>
  </nav>
  <div class="search-account">
    <div class="search-bar" id="search-bar">
      <input type="text" id="course-search-input" placeholder="Find your course...">
      <button type="submit" id="course-search-button"><i class="fa fa-search"></i></button>
    </div>
    <a href="lms?id=lms_my_profile" class="account">${My Profile}</a>
    <!-- Notifications Button -->
<button id="notifications-button" class="notifications-button">
  <i class="fa fa-bell"></i>
  <span id="notifications-count" class="notifications-count"></span>
</button>

<!-- Notifications Modal -->
<div id="notifications-modal" class="modal">
  <div class="modal-header">
    <h2>Notifications</h2>
    <button class="close">&times;</button>
  </div>
  <div class="modal-body">
    <ul id="notifications-list"></ul>
  </div>
</div>

<script>
  document.getElementById('notifications-button').addEventListener('click', function() {
    var modal = document.getElementById('notifications-modal');
    modal.classList.toggle('show');
    
    // Stop the shake animation when the button is clicked
    var button = document.getElementById('notifications-button');
    button.classList.add('stop-shake');
  });

  document.querySelector('#notifications-modal .close').addEventListener('click', function() {
    var modal = document.getElementById('notifications-modal');
    modal.classList.remove('show');
  });

  window.addEventListener('click', function(event) {
    var modal = document.getElementById('notifications-modal');
    if (event.target === modal) {
      modal.classList.remove('show');
    }
  });
</script>


  </div>
</header>
<script>
  document.getElementById('course-search-button').addEventListener('click', function() {
    performSearch();
  });

  document.getElementById('course-search-input').addEventListener('keypress', function(event) {
    if (event.key === 'Enter') {
      performSearch();
    }
  });

  document.addEventListener('DOMContentLoaded', function() {
    var currentUrl = window.location.href;
    var searchBar = document.getElementById('search-bar');
    if (currentUrl.includes('lms?id=lms_index')) {
      searchBar.style.display = 'none';
    }
  });

  function performSearch() {
    var query = document.getElementById('course-search-input').value;
    if (query) {
      window.location.href = 'lms?id=lms_search_result&search=' + encodeURIComponent(query);
    }
  }

  document.getElementById('menu-toggle').addEventListener('click', function() {
    var navigation = document.getElementById('navigation');
    navigation.classList.toggle('active');
  });
</script>]]></template>
    </sp_header_footer>
</record_update>
